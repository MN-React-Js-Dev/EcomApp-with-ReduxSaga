


https://www.figma.com/file/kq07nG6o7Hq9B0Y6msMzwu/ReactJs-Test-2023?node-id=0%3A1&t=8uxnkSSHxTgO7RcZ-1

 

To view the prototype demo of expected functionality, click Play on the top right of the link

 

Task

1. Build Frontend for attached file

 

2. Implement/bind the following APIs with state management 

a. Product with references to colors and materials per product based on color and material id 


https://api.sheety.co/af35b536915ec576818d468cf2a6505c/reactjsTest/products

 

b. Product Colors 


https://api.sheety.co/af35b536915ec576818d468cf2a6505c/reactjsTest/colors

 

c. Product Material 


https://api.sheety.co/af35b536915ec576818d468cf2a6505c/reactjsTest/material

 

d. Featured Products 


https://api.sheety.co/af35b536915ec576818d468cf2a6505c/reactjsTest/featured

 

3. Authenticate using the following Bearer Token : Ex9yLyRU7wvyxfblpq5HAhfQqUP1vIyo 

 

4. Expected behavior

- Fetch data from product, color and material apis and bind the correct data to the frontend.

- Tapping on a filter should filter products- Mouse over on image thumbnail will show add to cart (Click Cotton on the left bar to see demo)

- Clicking add to cart should: 

1. increment the Cart counter on the top right 

2. Slide out cart

2. Maintain state of user cart

- Clicking remove on the shopping cart panel should reduce the product count from the cart

 

5. Other Considerations
a. Header should be sticky and should switch based on background (See prototype for behaviour)

b. Filters should work

c. Footer should be correctly implemented

d. Pagination should be implemented

 

 

We will judge you on

1. Correct implementation of UI in HTML, execution of UI (Padding, margins etc) and API binding

2. Project Structure

3. Components & their Reuse

4. Coding standard (formatting, optimizations)

5. State management